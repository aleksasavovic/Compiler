INFO  20:33:43,507 - Compiling source file: C:\Users\Aleksa\Desktop\fax\4. godina\7. semestar\pp1\eclipse_lab\workspace\MJCompiler\test\program.mj
INFO  20:33:43,550 - #2 program
INFO  20:33:43,550 - #47 test302
INFO  20:33:43,550 - #13 const
INFO  20:33:43,551 - #47 int
INFO  20:33:43,552 - #47 jedan
INFO  20:33:43,552 - #11 =
INFO  20:33:43,552 - #46 1
INFO  20:33:43,552 - #5 ;
INFO  20:33:43,553 - #47 int
INFO  20:33:43,553 - #47 i
INFO  20:33:43,554 - #5 ;
INFO  20:33:43,554 - #47 bool
INFO  20:33:43,555 - #47 ibool
INFO  20:33:43,555 - #5 ;
INFO  20:33:43,555 - #47 bajtnul
INFO  20:33:43,555 - #47 zet
INFO  20:33:43,555 - #5 ;
INFO  20:33:43,555 - #47 int
INFO  20:33:43,555 - #47 niz
INFO  20:33:43,555 - #15 [
INFO  20:33:43,555 - #14 ]
INFO  20:33:43,556 - #5 ;
INFO  20:33:43,556 - #3 {
INFO  20:33:43,556 - #47 int
INFO  20:33:43,556 - #47 sum
INFO  20:33:43,557 - #6 (
INFO  20:33:43,557 - #47 int
INFO  20:33:43,557 - #47 z
INFO  20:33:43,557 - #8 ,
INFO  20:33:43,557 - #47 int
INFO  20:33:43,557 - #47 d
INFO  20:33:43,558 - #7 )
INFO  20:33:43,558 - #3 {
INFO  20:33:43,558 - #36 return
INFO  20:33:43,559 - #47 z
INFO  20:33:43,559 - #10 +
INFO  20:33:43,562 - #47 d
INFO  20:33:43,563 - #5 ;
INFO  20:33:43,564 - #4 }
INFO  20:33:43,564 - #47 int
INFO  20:33:43,565 - #47 inkrement
INFO  20:33:43,565 - #6 (
INFO  20:33:43,565 - #47 int
INFO  20:33:43,565 - #47 a
INFO  20:33:43,565 - #8 ,
INFO  20:33:43,566 - #47 int
INFO  20:33:43,566 - #47 inc
INFO  20:33:43,566 - #7 )
INFO  20:33:43,566 - #47 int
INFO  20:33:43,566 - #47 pom
INFO  20:33:43,566 - #5 ;
INFO  20:33:43,566 - #3 {
INFO  20:33:43,567 - #44 if
INFO  20:33:43,567 - #6 (
INFO  20:33:43,567 - #47 inc
INFO  20:33:43,567 - #26 ==
INFO  20:33:43,567 - #47 jedan
INFO  20:33:43,568 - #7 )
INFO  20:33:43,570 - #47 pom
INFO  20:33:43,573 - #11 =
INFO  20:33:43,574 - #46 1
INFO  20:33:43,574 - #5 ;
INFO  20:33:43,575 - #45 else
INFO  20:33:43,575 - #44 if
INFO  20:33:43,575 - #6 (
INFO  20:33:43,575 - #47 inc
INFO  20:33:43,575 - #26 ==
INFO  20:33:43,575 - #46 2
INFO  20:33:43,576 - #7 )
INFO  20:33:43,576 - #47 pom
INFO  20:33:43,576 - #11 =
INFO  20:33:43,576 - #47 a
INFO  20:33:43,576 - #5 ;
INFO  20:33:43,576 - #36 return
INFO  20:33:43,577 - #47 sum
INFO  20:33:43,577 - #6 (
INFO  20:33:43,577 - #47 a
INFO  20:33:43,577 - #8 ,
INFO  20:33:43,578 - #47 pom
INFO  20:33:43,578 - #7 )
INFO  20:33:43,579 - #5 ;
INFO  20:33:43,579 - #4 }
INFO  20:33:43,579 - #47 bool
INFO  20:33:43,579 - #47 verify
INFO  20:33:43,579 - #6 (
INFO  20:33:43,579 - #7 )
INFO  20:33:43,580 - #3 {
INFO  20:33:43,580 - #9 print
INFO  20:33:43,580 - #6 (
INFO  20:33:43,580 - #49 v
INFO  20:33:43,580 - #7 )
INFO  20:33:43,580 - #5 ;
INFO  20:33:43,580 - #36 return
INFO  20:33:43,581 - #48 false
INFO  20:33:43,581 - #5 ;
INFO  20:33:43,581 - #4 }
INFO  20:33:43,581 - #12 void
INFO  20:33:43,581 - #47 main
INFO  20:33:43,581 - #6 (
INFO  20:33:43,581 - #7 )
INFO  20:33:43,582 - #3 {
INFO  20:33:43,582 - #44 if
INFO  20:33:43,582 - #6 (
INFO  20:33:43,582 - #46 1
INFO  20:33:43,582 - #27 !=
INFO  20:33:43,582 - #46 1
INFO  20:33:43,583 - #7 )
INFO  20:33:43,583 - #9 print
INFO  20:33:43,583 - #6 (
INFO  20:33:43,583 - #19 -
INFO  20:33:43,583 - #46 6
INFO  20:33:43,584 - #7 )
INFO  20:33:43,584 - #5 ;
INFO  20:33:43,584 - #45 else
INFO  20:33:43,584 - #9 print
INFO  20:33:43,584 - #6 (
INFO  20:33:43,584 - #46 0
INFO  20:33:43,585 - #7 )
INFO  20:33:43,585 - #5 ;
INFO  20:33:43,585 - #47 ibool
INFO  20:33:43,585 - #11 =
INFO  20:33:43,585 - #48 false
INFO  20:33:43,585 - #5 ;
INFO  20:33:43,585 - #47 i
INFO  20:33:43,585 - #11 =
INFO  20:33:43,585 - #46 0
INFO  20:33:43,586 - #5 ;
INFO  20:33:43,586 - #40 do
INFO  20:33:43,586 - #3 {
INFO  20:33:43,586 - #44 if
INFO  20:33:43,586 - #6 (
INFO  20:33:43,586 - #47 i
INFO  20:33:43,586 - #26 ==
INFO  20:33:43,586 - #46 2
INFO  20:33:43,586 - #7 )
INFO  20:33:43,587 - #47 ibool
INFO  20:33:43,587 - #11 =
INFO  20:33:43,587 - #48 true
INFO  20:33:43,587 - #5 ;
INFO  20:33:43,587 - #47 i
INFO  20:33:43,587 - #23 ++
INFO  20:33:43,587 - #5 ;
INFO  20:33:43,588 - #4 }
INFO  20:33:43,588 - #41 while
INFO  20:33:43,588 - #6 (
INFO  20:33:43,588 - #47 i
INFO  20:33:43,588 - #30 <
INFO  20:33:43,588 - #46 5
INFO  20:33:43,589 - #7 )
INFO  20:33:43,589 - #5 ;
INFO  20:33:43,589 - #44 if
INFO  20:33:43,589 - #6 (
INFO  20:33:43,589 - #47 ibool
INFO  20:33:43,589 - #7 )
INFO  20:33:43,589 - #44 if
INFO  20:33:43,589 - #6 (
INFO  20:33:43,589 - #47 i
INFO  20:33:43,590 - #26 ==
INFO  20:33:43,590 - #46 5
INFO  20:33:43,590 - #7 )
INFO  20:33:43,590 - #9 print
INFO  20:33:43,590 - #6 (
INFO  20:33:43,590 - #46 1
INFO  20:33:43,590 - #7 )
INFO  20:33:43,590 - #5 ;
INFO  20:33:43,590 - #45 else
INFO  20:33:43,590 - #9 print
INFO  20:33:43,590 - #6 (
INFO  20:33:43,591 - #19 -
INFO  20:33:43,591 - #46 1
INFO  20:33:43,591 - #7 )
INFO  20:33:43,591 - #5 ;
INFO  20:33:43,591 - #47 niz
INFO  20:33:43,591 - #11 =
INFO  20:33:43,591 - #25 new
INFO  20:33:43,592 - #47 int
INFO  20:33:43,592 - #15 [
INFO  20:33:43,592 - #46 3
INFO  20:33:43,592 - #14 ]
INFO  20:33:43,592 - #5 ;
INFO  20:33:43,592 - #47 niz
INFO  20:33:43,592 - #15 [
INFO  20:33:43,593 - #46 0
INFO  20:33:43,593 - #14 ]
INFO  20:33:43,593 - #11 =
INFO  20:33:43,593 - #46 1
INFO  20:33:43,593 - #5 ;
INFO  20:33:43,593 - #47 niz
INFO  20:33:43,593 - #15 [
INFO  20:33:43,593 - #46 1
INFO  20:33:43,593 - #14 ]
INFO  20:33:43,594 - #11 =
INFO  20:33:43,594 - #46 2
INFO  20:33:43,594 - #5 ;
INFO  20:33:43,594 - #47 niz
INFO  20:33:43,594 - #15 [
INFO  20:33:43,594 - #46 2
INFO  20:33:43,594 - #14 ]
INFO  20:33:43,594 - #11 =
INFO  20:33:43,594 - #47 sum
INFO  20:33:43,595 - #6 (
INFO  20:33:43,595 - #47 niz
INFO  20:33:43,595 - #15 [
INFO  20:33:43,595 - #46 1
INFO  20:33:43,595 - #14 ]
INFO  20:33:43,595 - #8 ,
INFO  20:33:43,595 - #47 niz
INFO  20:33:43,595 - #15 [
INFO  20:33:43,595 - #46 0
INFO  20:33:43,595 - #14 ]
INFO  20:33:43,596 - #7 )
INFO  20:33:43,596 - #10 +
INFO  20:33:43,596 - #46 1
INFO  20:33:43,596 - #5 ;
INFO  20:33:43,596 - #44 if
INFO  20:33:43,596 - #6 (
INFO  20:33:43,596 - #47 verify
INFO  20:33:43,596 - #6 (
INFO  20:33:43,597 - #7 )
INFO  20:33:43,597 - #39 ||
INFO  20:33:43,597 - #47 niz
INFO  20:33:43,597 - #15 [
INFO  20:33:43,597 - #46 2
INFO  20:33:43,598 - #14 ]
INFO  20:33:43,598 - #26 ==
INFO  20:33:43,598 - #46 4
INFO  20:33:43,598 - #7 )
INFO  20:33:43,598 - #9 print
INFO  20:33:43,598 - #6 (
INFO  20:33:43,598 - #47 ord
INFO  20:33:43,598 - #6 (
INFO  20:33:43,598 - #49 A
INFO  20:33:43,598 - #7 )
INFO  20:33:43,599 - #7 )
INFO  20:33:43,599 - #5 ;
INFO  20:33:43,599 - #45 else
INFO  20:33:43,599 - #9 print
INFO  20:33:43,599 - #6 (
INFO  20:33:43,599 - #47 ord
INFO  20:33:43,599 - #6 (
INFO  20:33:43,599 - #49 a
INFO  20:33:43,599 - #7 )
INFO  20:33:43,599 - #7 )
INFO  20:33:43,599 - #5 ;
INFO  20:33:43,600 - #9 print
INFO  20:33:43,600 - #6 (
INFO  20:33:43,600 - #47 eol
INFO  20:33:43,600 - #7 )
INFO  20:33:43,600 - #5 ;
INFO  20:33:43,600 - #47 i
INFO  20:33:43,600 - #11 =
INFO  20:33:43,600 - #46 0
INFO  20:33:43,600 - #5 ;
INFO  20:33:43,600 - #40 do
INFO  20:33:43,600 - #3 {
INFO  20:33:43,601 - #44 if
INFO  20:33:43,601 - #6 (
INFO  20:33:43,601 - #47 i
INFO  20:33:43,601 - #26 ==
INFO  20:33:43,601 - #46 3
INFO  20:33:43,601 - #7 )
INFO  20:33:43,601 - #3 {
INFO  20:33:43,601 - #47 i
INFO  20:33:43,601 - #23 ++
INFO  20:33:43,602 - #5 ;
INFO  20:33:43,602 - #35 continue
INFO  20:33:43,602 - #5 ;
INFO  20:33:43,602 - #4 }
INFO  20:33:43,602 - #44 if
INFO  20:33:43,602 - #6 (
INFO  20:33:43,603 - #47 i
INFO  20:33:43,603 - #26 ==
INFO  20:33:43,603 - #46 4
INFO  20:33:43,603 - #7 )
INFO  20:33:43,603 - #34 break
INFO  20:33:43,603 - #5 ;
INFO  20:33:43,603 - #47 i
INFO  20:33:43,604 - #11 =
INFO  20:33:43,604 - #47 inkrement
INFO  20:33:43,604 - #6 (
INFO  20:33:43,604 - #47 i
INFO  20:33:43,604 - #8 ,
INFO  20:33:43,604 - #46 1
INFO  20:33:43,604 - #7 )
INFO  20:33:43,604 - #5 ;
INFO  20:33:43,605 - #4 }
INFO  20:33:43,605 - #41 while
INFO  20:33:43,605 - #6 (
INFO  20:33:43,605 - #47 i
INFO  20:33:43,605 - #30 <
INFO  20:33:43,605 - #46 10
INFO  20:33:43,605 - #7 )
INFO  20:33:43,605 - #5 ;
INFO  20:33:43,605 - #44 if
INFO  20:33:43,605 - #6 (
INFO  20:33:43,606 - #47 i
INFO  20:33:43,606 - #26 ==
INFO  20:33:43,606 - #46 3
INFO  20:33:43,606 - #38 &&
INFO  20:33:43,606 - #47 verify
INFO  20:33:43,606 - #6 (
INFO  20:33:43,606 - #7 )
INFO  20:33:43,606 - #7 )
INFO  20:33:43,606 - #9 print
INFO  20:33:43,607 - #6 (
INFO  20:33:43,607 - #19 -
INFO  20:33:43,607 - #46 4
INFO  20:33:43,607 - #7 )
INFO  20:33:43,607 - #5 ;
INFO  20:33:43,607 - #45 else
INFO  20:33:43,607 - #9 print
INFO  20:33:43,607 - #6 (
INFO  20:33:43,607 - #46 4
INFO  20:33:43,607 - #7 )
INFO  20:33:43,607 - #5 ;
INFO  20:33:43,608 - #18 read
INFO  20:33:43,608 - #6 (
INFO  20:33:43,608 - #47 niz
INFO  20:33:43,608 - #15 [
INFO  20:33:43,608 - #46 0
INFO  20:33:43,608 - #14 ]
INFO  20:33:43,608 - #7 )
INFO  20:33:43,608 - #5 ;
INFO  20:33:43,608 - #18 read
INFO  20:33:43,608 - #6 (
INFO  20:33:43,609 - #47 niz
INFO  20:33:43,609 - #15 [
INFO  20:33:43,609 - #46 1
INFO  20:33:43,609 - #14 ]
INFO  20:33:43,609 - #7 )
INFO  20:33:43,609 - #5 ;
INFO  20:33:43,609 - #18 read
INFO  20:33:43,609 - #6 (
INFO  20:33:43,609 - #47 niz
INFO  20:33:43,609 - #15 [
INFO  20:33:43,609 - #46 2
INFO  20:33:43,610 - #14 ]
INFO  20:33:43,610 - #7 )
INFO  20:33:43,610 - #5 ;
INFO  20:33:43,610 - #9 print
INFO  20:33:43,610 - #6 (
INFO  20:33:43,610 - #47 eol
INFO  20:33:43,610 - #7 )
INFO  20:33:43,610 - #5 ;
INFO  20:33:43,610 - #9 print
INFO  20:33:43,610 - #6 (
INFO  20:33:43,610 - #47 sum
INFO  20:33:43,611 - #6 (
INFO  20:33:43,611 - #47 sum
INFO  20:33:43,611 - #6 (
INFO  20:33:43,611 - #47 niz
INFO  20:33:43,611 - #15 [
INFO  20:33:43,611 - #46 0
INFO  20:33:43,611 - #14 ]
INFO  20:33:43,611 - #8 ,
INFO  20:33:43,611 - #47 niz
INFO  20:33:43,611 - #15 [
INFO  20:33:43,611 - #46 1
INFO  20:33:43,612 - #14 ]
INFO  20:33:43,612 - #7 )
INFO  20:33:43,612 - #8 ,
INFO  20:33:43,612 - #47 niz
INFO  20:33:43,612 - #15 [
INFO  20:33:43,612 - #46 2
INFO  20:33:43,612 - #14 ]
INFO  20:33:43,612 - #7 )
INFO  20:33:43,612 - #7 )
INFO  20:33:43,612 - #5 ;
INFO  20:33:43,612 - #9 print
INFO  20:33:43,613 - #6 (
INFO  20:33:43,613 - #47 eol
INFO  20:33:43,613 - #7 )
INFO  20:33:43,613 - #5 ;
INFO  20:33:43,613 - #9 print
INFO  20:33:43,613 - #6 (
INFO  20:33:43,613 - #47 inkrement
INFO  20:33:43,613 - #6 (
INFO  20:33:43,613 - #47 niz
INFO  20:33:43,613 - #15 [
INFO  20:33:43,613 - #46 2
INFO  20:33:43,614 - #14 ]
INFO  20:33:43,614 - #8 ,
INFO  20:33:43,614 - #46 2
INFO  20:33:43,614 - #7 )
INFO  20:33:43,614 - #7 )
INFO  20:33:43,614 - #5 ;
INFO  20:33:43,614 - #9 print
INFO  20:33:43,614 - #6 (
INFO  20:33:43,614 - #47 verify
INFO  20:33:43,614 - #6 (
INFO  20:33:43,615 - #7 )
INFO  20:33:43,615 - #32 ?
INFO  20:33:43,615 - #49 t
INFO  20:33:43,615 - #33 :
INFO  20:33:43,615 - #49 f
INFO  20:33:43,615 - #7 )
INFO  20:33:43,615 - #5 ;
INFO  20:33:43,615 - #4 }
INFO  20:33:43,615 - #4 }
ERROR 20:33:43,639 - Nije pronadjen simbol sa imenom bajtnul u tabeli simbola
ERROR 20:33:43,639 - Greska na liniji 2 : tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije sum
ERROR 20:33:43,640 - Greska na liniji 2 : tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije inkrement
ERROR 20:33:43,640 - Greska na liniji 2 : tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije verify
ERROR 20:33:43,641 - Parsiranje NIJE uspesno zavrseno!
